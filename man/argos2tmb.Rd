% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dcrw.r
\name{argos2tmb}
\alias{argos2tmb}
\title{ARGOS data pre-processing}
\usage{
argos2tmb(d, tstep = 1, soth = TRUE, extrap = FALSE, amf = amfCRAWL())
}
\arguments{
\item{d}{a data frame of observations (see details)}

\item{tstep}{the time step to predict to (in days)}

\item{extrap}{if TRUE, the final predicted state occurs
immediately before the last observation, otherwise the final
predicted state occurs immediately after the last observation.}

\item{amf}{Argos error scale mmultiplication factors}
}
\value{
A list with components
\item{\code{y}}{a 2 column matrix of the lon,lat observations}
\item{\code{K}}{a 2 column matrix of the ARGOS scale factors}
\item{\code{idx}}{a vector of interpolation indices}
\item{\code{ws}}{a vector of interpolation weights}
\item{\code{ts}}{the times at which states are predicted (POSIXct,GMT)}
\item{\code{dt}}{the time step at which states are predicted (secs)}
}
\description{
Format ARGOS track data for filtering
}
\details{
This is an internal function used by \code{fit_ssm} to format track
data for the TMB filter.

The input track is given as a data.frame where each row is an
observed location and columns
\describe{
\item{'date'}{observation time (POSIXct,GMT),}
\item{'lon'}{observed longitude,}
\item{'lat'}{observed latitude,}
\item{'lc'}{ARGOS location class.}
}

From this it calculates interpolation indices \code{idx} and
weights \code{ws} such that if \code{x} is the matrix of predicted
states, the fitted locations are \code{ws*x[idx+1,] +
(1-ws)*x[idx+2,]}.

By default the function uses the same ARGOS multiplication factors
to scale location accuracy by location class as used in
\pkg{crawl}.
}
